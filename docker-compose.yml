version: '3.8'


networks:
  app_network:
    driver: bridge


services:
  db:
    image: postgres
    networks:
      - app_network
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DATABASE_PW}  # Consistent reference to DATABASE_PW
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always

  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    networks:
      - app_network
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      # Required for KRaft
      CLUSTER_ID: "6NZCVziHwaCq9ztugHZYgw" #just an example, generate your own
      # KRaft mode
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LOG_DIRS: /tmp/kraft-combined-logs
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1

  kafka-init:
    image: confluentinc/cp-kafka:7.5.0
    depends_on:
      - kafka
    networks:
      - app_network
    command: >
      bash -c "kafka-topics --create --if-not-exists --topic notifications --partitions 1 --replication-factor 1 --bootstrap-server kafka:9092"
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server kafka:9092 --list | grep -q notifications"]
      interval: 5s
      timeout: 5s
      retries: 10
    restart: "no"

  app1:
    build: .
    networks:
      - app_network
    env_file:
      - .env  # Reference the .env file here
    environment:
      - DATABASE_PW=${DATABASE_PW}  # Ensure DATABASE_PW is correctly passed
      - PORT=5432
      - DATABASE_URL=postgresql://postgres:${DATABASE_PW}@db:5432/dbname  # PostgreSQL connection string
    command: ["python", "launch_tg.py",  "-r requirements.txt" ]
    depends_on:
      - db


  app2:
    build: .
    networks:
      - app_network
    env_file:
      - .env  # Reference the .env file here
    environment:
      - DATABASE_PW=${DATABASE_PW}  # Ensure DATABASE_PW is consistently used
      - PORT=5432
      - DATABASE_URL=postgresql://postgres:${DATABASE_PW}@db:5432/dbname  # PostgreSQL connection string
    command: ["python", "launch_ds.py",  "-r requirements.txt"]
    depends_on:
      - db
      - kafka-init


  app_consumer:
    build: .
    networks:
      - app_network
    env_file:
      - .env
    command: [ "python3", "consumer_to_tg.py" ]  # Launch the metrics.py script
    depends_on:
      kafka-init:
        condition: service_healthy


volumes:
  pgdata: