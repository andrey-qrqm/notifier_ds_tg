version: '3.8'


networks:
  app_network:
    driver: bridge


services:
  db:
    image: postgres
    networks:
      - app_network
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DATABASE_PW}  # Consistent reference to DATABASE_PW
      POSTGRES_DB: postgres
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: always


  app1:
    build: .
    networks:
      - app_network
    env_file:
      - .env  # Reference the .env file here
    environment:
      - DATABASE_PW=${DATABASE_PW}  # Ensure DATABASE_PW is correctly passed
      - PORT=5432
      - DATABASE_URL=postgresql://postgres:${DATABASE_PW}@db:5432/dbname  # PostgreSQL connection string
    command: ["python", "launch_tg.py",  "-r requirements.txt" ]
    depends_on:
      - db


  app2:
    build: .
    networks:
      - app_network
    env_file:
      - .env  # Reference the .env file here
    environment:
      - DATABASE_PW=${DATABASE_PW}  # Ensure DATABASE_PW is consistently used
      - PORT=5432
      - DATABASE_URL=postgresql://postgres:${DATABASE_PW}@db:5432/dbname  # PostgreSQL connection string
    command: ["python", "launch_ds.py",  "-r requirements.txt"]
    depends_on:
      - db


  app_metrics:
    build: .
    networks:
      - app_network
    env_file:
      - .env
    environment:
      - DATABASE_PW=${DATABASE_PW}  # Pass the database password
      - DATABASE_URL=postgresql://postgres:${DATABASE_PW}@db:5432/dbname  # PostgreSQL connection string
    command: [ "python", "metrics.py" ]  # Launch the metrics.py script
    depends_on:
      - db
    ports:
      - "8000:8000"  # Expose Prometheus metrics endpoint on port 8000


volumes:
  pgdata:
